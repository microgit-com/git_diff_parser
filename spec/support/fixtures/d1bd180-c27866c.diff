diff --git a/lib/saddler/reporter/github.rb b/lib/saddler/reporter/github.rb
index fc33cdd..0638356 100644
--- a/lib/saddler/reporter/github.rb
+++ b/lib/saddler/reporter/github.rb
@@ -2,6 +2,7 @@
 require 'octokit'
 require 'git'
 require 'saddler/reporter/github/version'
+require 'saddler/reporter/github/support'
 require 'saddler/reporter/github/helper'
 require 'saddler/reporter/github/client'
 require 'saddler/reporter/github/comment'
diff --git a/lib/saddler/reporter/github/commit_comment.rb b/lib/saddler/reporter/github/commit_comment.rb
index 39f0969..915e4fb 100644
--- a/lib/saddler/reporter/github/commit_comment.rb
+++ b/lib/saddler/reporter/github/commit_comment.rb
@@ -2,6 +2,7 @@ module Saddler
   module Reporter
     module Github
       class CommitComment
+        include Support
         include Helper
 
         # https://developer.github.com/v3/repos/comments/#create-a-commit-comment
@@ -11,7 +12,7 @@ def report(messages, options)
           data = parse(messages)
 
           # build comment
-          body = build_body(data)
+          body = concat_body(data)
           return if body.empty?
           comment = Comment.new(sha1, body, nil, nil)
 
@@ -25,20 +26,6 @@ def report(messages, options)
           # create commit_comment
           client.create_commit_comment(comment)
         end
-
-        def build_body(data)
-          buffer = []
-          files = data['checkstyle']['file'] ||= []
-          files.each do |file|
-            errors = file['error'] ||= []
-            errors.each do |error|
-              severity = error['@severity'] && error['@severity'].upcase
-              message = error['@message']
-              buffer << [severity, message].compact.join(': ')
-            end
-          end
-          buffer.join("\n")
-        end
       end
     end
   end
diff --git a/lib/saddler/reporter/github/helper.rb b/lib/saddler/reporter/github/helper.rb
index 7376a64..b7843e5 100644
--- a/lib/saddler/reporter/github/helper.rb
+++ b/lib/saddler/reporter/github/helper.rb
@@ -2,40 +2,21 @@ module Saddler
   module Reporter
     module Github
       module Helper
-        def initialize(output)
-          @output = output
-        end
-
-        def report(messages, _options)
-          @output.puts messages
-        end
-
-        # {"checkstyle"=>
-        #    {"file"=>
-        #       [{"error"=>
-        #           [{"@column"=>"4",
-        #             "@line"=>"22",
-        #             "@message"=>"Assignment Branch Condition size for report is too high. [34.34/15]",
-        #             "@severity"=>"info",
-        #             "@source"=>"com.puppycrawl.tools.checkstyle.Metrics/AbcSize"},
-        #            {"@column"=>"4",
-        #             "@line"=>"22",
-        #             "@message"=>"Cyclomatic complexity for report is too high. [10/6]",
-        #             "@severity"=>"info",
-        #             "@source"=>"com.puppycrawl.tools.checkstyle.Metrics/CyclomaticComplexity"},
-        #            {"@column"=>"6",
-        #             "@line"=>"39",
-        #             "@message"=>"Use space after control keywords.",
-        #             "@severity"=>"info",
-        #             "@source"=>"com.puppycrawl.tools.checkstyle.Style/SpaceAfterControlKeyword"}],
-        #         "@name"=>"/Users/sane/work/ruby-study/saddler/lib/saddler/cli.rb"},
-        #        {"@name"=>"/Users/sane/work/ruby-study/saddler/lib/saddler/reporter.rb"}]}}
-        def parse(xml)
-          Nori
-            .new(parser: :rexml)
-            .parse(xml)
+        def concat_body(data)
+          buffer = []
+          files = data['checkstyle']['file'] ||= []
+          files.each do |file|
+            errors = file['error'] ||= []
+            errors.each do |error|
+              severity = error['@severity'] && error['@severity'].upcase
+              message = error['@message']
+              buffer << [severity, message].compact.join(': ')
+            end
+          end
+          buffer.join("\n")
         end
       end
     end
   end
 end
+
diff --git a/lib/saddler/reporter/github/support.rb b/lib/saddler/reporter/github/support.rb
new file mode 100644
index 0000000..7969a4d
--- /dev/null
+++ b/lib/saddler/reporter/github/support.rb
@@ -0,0 +1,41 @@
+module Saddler
+  module Reporter
+    module Github
+      module Support
+        def initialize(output)
+          @output = output
+        end
+
+        def report(messages, _options)
+          @output.puts messages
+        end
+
+        # {"checkstyle"=>
+        #    {"file"=>
+        #       [{"error"=>
+        #           [{"@column"=>"4",
+        #             "@line"=>"22",
+        #             "@message"=>"Assignment Branch Condition size for report is too high. [34.34/15]",
+        #             "@severity"=>"info",
+        #             "@source"=>"com.puppycrawl.tools.checkstyle.Metrics/AbcSize"},
+        #            {"@column"=>"4",
+        #             "@line"=>"22",
+        #             "@message"=>"Cyclomatic complexity for report is too high. [10/6]",
+        #             "@severity"=>"info",
+        #             "@source"=>"com.puppycrawl.tools.checkstyle.Metrics/CyclomaticComplexity"},
+        #            {"@column"=>"6",
+        #             "@line"=>"39",
+        #             "@message"=>"Use space after control keywords.",
+        #             "@severity"=>"info",
+        #             "@source"=>"com.puppycrawl.tools.checkstyle.Style/SpaceAfterControlKeyword"}],
+        #         "@name"=>"/Users/sane/work/ruby-study/saddler/lib/saddler/cli.rb"},
+        #        {"@name"=>"/Users/sane/work/ruby-study/saddler/lib/saddler/reporter.rb"}]}}
+        def parse(xml)
+          Nori
+            .new(parser: :rexml)
+            .parse(xml)
+        end
+      end
+    end
+  end
+end
